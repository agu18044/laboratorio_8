

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Oct 05 20:07:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  021E                     __pidataBANK0:
   215                           
   216                           ;initializer for _display
   217  021E  343F               	retlw	63
   218  021F  3406               	retlw	6
   219  0220  345B               	retlw	91
   220  0221  344F               	retlw	79
   221  0222  3466               	retlw	102
   222  0223  346D               	retlw	109
   223  0224  347D               	retlw	125
   224  0225  3407               	retlw	7
   225  0226  347F               	retlw	127
   226  0227  346F               	retlw	111
   227  0009                     _PORTE	set	9
   228  0005                     _PORTA	set	5
   229  001E                     _ADRESH	set	30
   230  0008                     _PORTD	set	8
   231  001F                     _ADCON0bits	set	31
   232  000C                     _PIR1bits	set	12
   233  0001                     _TMR0	set	1
   234  000B                     _INTCONbits	set	11
   235  0007                     _PORTC	set	7
   236  0005                     _PORTAbits	set	5
   237  005A                     _T0IF	set	90
   238  008C                     _PIE1bits	set	140
   239  0081                     _OPTION_REGbits	set	129
   240  009F                     _ADCON1bits	set	159
   241  008F                     _OSCCONbits	set	143
   242  0089                     _TRISE	set	137
   243  0088                     _TRISD	set	136
   244  0087                     _TRISC	set	135
   245  0085                     _TRISA	set	133
   246  0189                     _ANSELH	set	393
   247  0188                     _ANSEL	set	392
   248                           
   249                           	psect	cinit
   250  0011                     start_initialization:	
   251                           ; #config settings
   252                           
   253  0011                     __initialization:
   254                           
   255                           ; Initialize objects allocated to BANK0
   256  0011  1383               	bcf	3,7	;select IRP bank0
   257  0012  3035               	movlw	low (__pdataBANK0+10)
   258  0013  00FD               	movwf	btemp+-1
   259  0014  3002               	movlw	high __pidataBANK0
   260  0015  00FE               	movwf	btemp
   261  0016  301E               	movlw	low __pidataBANK0
   262  0017  00FF               	movwf	btemp+1
   263  0018  302B               	movlw	low __pdataBANK0
   264  0019  0084               	movwf	4
   265  001A  120A  118A  220F  120A  118A  	fcall	init_ram0
   266                           
   267                           ; Clear objects allocated to BANK0
   268  001F  01B5               	clrf	__pbssBANK0& (0+127)
   269  0020  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   270  0021  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   271                           
   272                           ; Clear objects allocated to COMMON
   273  0022  01F6               	clrf	__pbssCOMMON& (0+127)
   274  0023  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   275  0024  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   276  0025  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   277  0026                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  0026                     __end_of__initialization:
   281  0026  0183               	clrf	3
   282  0027  120A  118A  29DB   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  0076                     __pbssCOMMON:
   286  0076                     _unidad:
   287  0076                     	ds	1
   288  0077                     _decena:
   289  0077                     	ds	1
   290  0078                     _centena:
   291  0078                     	ds	1
   292  0079                     _valor:
   293  0079                     	ds	1
   294                           
   295                           	psect	bssBANK0
   296  0035                     __pbssBANK0:
   297  0035                     _multi:
   298  0035                     	ds	2
   299  0037                     _cambio:
   300  0037                     	ds	1
   301                           
   302                           	psect	dataBANK0
   303  002B                     __pdataBANK0:
   304  002B                     _display:
   305  002B                     	ds	10
   306                           
   307                           	psect	inittext
   308  020B                     init_fetch0:	
   309                           ;	Called with low address in FSR and high address in W
   310                           
   311  020B  087E               	movf	btemp,w
   312  020C  008A               	movwf	10
   313  020D  087F               	movf	btemp+1,w
   314  020E  0082               	movwf	2
   315  020F                     init_ram0:	
   316                           ;Called with:
   317                           ;	high address of idata address in btemp 
   318                           ;	low address of idata address in btemp+1 
   319                           ;	low address of data in FSR
   320                           ;	high address + 1 of data in btemp-1
   321                           
   322  020F  120A  118A  220B  120A  118A  	fcall	init_fetch0
   323  0214  0080               	movwf	0
   324  0215  0A84               	incf	4,f
   325  0216  0804               	movf	4,w
   326  0217  067D               	xorwf	btemp+-1,w
   327  0218  1903               	btfsc	3,2
   328  0219  3400               	retlw	0
   329  021A  0AFF               	incf	btemp+1,f
   330  021B  1903               	btfsc	3,2
   331  021C  0AFE               	incf	btemp,f
   332  021D  2A0F               	goto	init_ram0
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:
   336  0070                     ?_setup:
   337  0070                     ?_division:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_isr:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ??_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351  0070                     	ds	4
   352  0074                     ??_setup:
   353  0074                     ??___awdiv:	
   354                           ; 1 bytes @ 0x4
   355                           
   356  0074                     ??___awmod:	
   357                           ; 1 bytes @ 0x4
   358                           
   359                           
   360                           ; 1 bytes @ 0x4
   361  0074                     	ds	1
   362  0075                     ??_main:
   363                           
   364                           ; 1 bytes @ 0x5
   365  0075                     	ds	1
   366                           
   367                           	psect	cstackBANK0
   368  0020                     __pcstackBANK0:
   369  0020                     ?___awdiv:
   370  0020                     ?___awmod:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0020                     ___awdiv@divisor:	
   374                           ; 2 bytes @ 0x0
   375                           
   376  0020                     ___awmod@divisor:	
   377                           ; 2 bytes @ 0x0
   378                           
   379                           
   380                           ; 2 bytes @ 0x0
   381  0020                     	ds	2
   382  0022                     ___awdiv@dividend:
   383  0022                     ___awmod@dividend:	
   384                           ; 2 bytes @ 0x2
   385                           
   386                           
   387                           ; 2 bytes @ 0x2
   388  0022                     	ds	2
   389  0024                     ___awdiv@counter:
   390  0024                     ___awmod@counter:	
   391                           ; 1 bytes @ 0x4
   392                           
   393                           
   394                           ; 1 bytes @ 0x4
   395  0024                     	ds	1
   396  0025                     ___awdiv@sign:
   397  0025                     ___awmod@sign:	
   398                           ; 1 bytes @ 0x5
   399                           
   400                           
   401                           ; 1 bytes @ 0x5
   402  0025                     	ds	1
   403  0026                     ___awdiv@quotient:
   404                           
   405                           ; 2 bytes @ 0x6
   406  0026                     	ds	2
   407  0028                     ??_division:
   408                           
   409                           ; 1 bytes @ 0x8
   410  0028                     	ds	3
   411                           
   412                           	psect	maintext
   413  01DB                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 67 in file "main8.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       0       0       0       0
   435 ;;      Temps:          1       0       0       0       0
   436 ;;      Totals:         1       0       0       0       0
   437 ;;Total ram usage:        1 bytes
   438 ;; Hardware stack levels required when called:    3
   439 ;; This function calls:
   440 ;;		_division
   441 ;;		_setup
   442 ;; This function is called by:
   443 ;;		Startup code after reset
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _main
   449  01DB                     _main:
   450  01DB                     l1106:	
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   453                           
   454                           
   455                           ;main8.c: 68:     setup();
   456  01DB  120A  118A  219D  120A  118A  	fcall	_setup
   457  01E0                     l1108:
   458                           
   459                           ;main8.c: 69:     ADCON0bits.GO = 1;
   460  01E0  1283               	bcf	3,5	;RP0=0, select bank0
   461  01E1  1303               	bcf	3,6	;RP1=0, select bank0
   462  01E2  149F               	bsf	31,1	;volatile
   463  01E3                     l1110:
   464                           
   465                           ;main8.c: 71:         if (ADCON0bits.GO == 0){
   466  01E3  1283               	bcf	3,5	;RP0=0, select bank0
   467  01E4  1303               	bcf	3,6	;RP1=0, select bank0
   468  01E5  189F               	btfsc	31,1	;volatile
   469  01E6  29E8               	goto	u721
   470  01E7  29E9               	goto	u720
   471  01E8                     u721:
   472  01E8  2A02               	goto	l1122
   473  01E9                     u720:
   474  01E9                     l1112:
   475                           
   476                           ;main8.c: 72:             if (ADCON0bits.CHS == 6)
   477  01E9  0C1F               	rrf	31,w	;volatile
   478  01EA  00F5               	movwf	??_main
   479  01EB  0C75               	rrf	??_main,w
   480  01EC  390F               	andlw	15
   481  01ED  3A06               	xorlw	6
   482  01EE  1D03               	skipz
   483  01EF  29F1               	goto	u731
   484  01F0  29F2               	goto	u730
   485  01F1                     u731:
   486  01F1  29F7               	goto	l1116
   487  01F2                     u730:
   488  01F2                     l1114:
   489                           
   490                           ;main8.c: 73:                 ADCON0bits.CHS = 5;
   491  01F2  081F               	movf	31,w	;volatile
   492  01F3  39C3               	andlw	-61
   493  01F4  3814               	iorlw	20
   494  01F5  009F               	movwf	31	;volatile
   495  01F6  29FB               	goto	l1118
   496  01F7                     l1116:
   497                           
   498                           ;main8.c: 75:                 ADCON0bits.CHS = 6;
   499  01F7  081F               	movf	31,w	;volatile
   500  01F8  39C3               	andlw	-61
   501  01F9  3818               	iorlw	24
   502  01FA  009F               	movwf	31	;volatile
   503  01FB                     l1118:
   504                           
   505                           ;main8.c: 76:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   506  01FB  3021               	movlw	33
   507  01FC  00F5               	movwf	??_main
   508  01FD                     u747:
   509  01FD  0BF5               	decfsz	??_main,f
   510  01FE  29FD               	goto	u747
   511  01FF                     l1120:
   512                           
   513                           ;main8.c: 77:             ADCON0bits.GO = 1;
   514  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   515  0200  1303               	bcf	3,6	;RP1=0, select bank0
   516  0201  149F               	bsf	31,1	;volatile
   517  0202                     l1122:
   518                           
   519                           ;main8.c: 80:         division();
   520  0202  120A  118A  2093  120A  118A  	fcall	_division
   521  0207  29E3               	goto	l1110
   522  0208  120A  118A  280E   	ljmp	start
   523  020B                     __end_of_main:
   524                           
   525                           	psect	text1
   526  019D                     __ptext1:	
   527 ;; *************** function _setup *****************
   528 ;; Defined at:
   529 ;;		line 84 in file "main8.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0
   538 ;; Tracked objects:
   539 ;;		On entry : 0/0
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   543 ;;      Params:         0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0
   545 ;;      Temps:          1       0       0       0       0
   546 ;;      Totals:         1       0       0       0       0
   547 ;;Total ram usage:        1 bytes
   548 ;; Hardware stack levels used:    1
   549 ;; Hardware stack levels required when called:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _setup
   559  019D                     _setup:
   560  019D                     l764:	
   561                           ;incstack = 0
   562                           ; Regs used in _setup: [wreg+status,2+status,0]
   563                           
   564                           
   565                           ;main8.c: 85:     ANSEL = 0b01100000;
   566  019D  3060               	movlw	96
   567  019E  1683               	bsf	3,5	;RP0=1, select bank3
   568  019F  1703               	bsf	3,6	;RP1=1, select bank3
   569  01A0  0088               	movwf	8	;volatile
   570  01A1                     l766:
   571                           
   572                           ;main8.c: 86:     ANSELH = 0;
   573  01A1  0189               	clrf	9	;volatile
   574  01A2                     l768:
   575                           
   576                           ;main8.c: 88:     TRISA = 0;
   577  01A2  1683               	bsf	3,5	;RP0=1, select bank1
   578  01A3  1303               	bcf	3,6	;RP1=0, select bank1
   579  01A4  0185               	clrf	5	;volatile
   580  01A5                     l770:
   581                           
   582                           ;main8.c: 89:     TRISC = 0;
   583  01A5  0187               	clrf	7	;volatile
   584  01A6                     l772:
   585                           
   586                           ;main8.c: 90:     TRISD = 0;
   587  01A6  0188               	clrf	8	;volatile
   588                           
   589                           ;main8.c: 91:     TRISE = 0b011;
   590  01A7  3003               	movlw	3
   591  01A8  0089               	movwf	9	;volatile
   592  01A9                     l774:
   593                           
   594                           ;main8.c: 93:     PORTA = 0;
   595  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   596  01AA  1303               	bcf	3,6	;RP1=0, select bank0
   597  01AB  0185               	clrf	5	;volatile
   598  01AC                     l776:
   599                           
   600                           ;main8.c: 94:     PORTC = 0;
   601  01AC  0187               	clrf	7	;volatile
   602  01AD                     l778:
   603                           
   604                           ;main8.c: 95:     PORTD = 0;
   605  01AD  0188               	clrf	8	;volatile
   606  01AE                     l780:
   607                           
   608                           ;main8.c: 96:     PORTE = 0;
   609  01AE  0189               	clrf	9	;volatile
   610  01AF                     l782:
   611                           
   612                           ;main8.c: 98:     OSCCONbits.IRCF = 0b0110;
   613  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   614  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   615  01B1  080F               	movf	15,w	;volatile
   616  01B2  398F               	andlw	-113
   617  01B3  3860               	iorlw	96
   618  01B4  008F               	movwf	15	;volatile
   619  01B5                     l784:
   620                           
   621                           ;main8.c: 99:     OSCCONbits.SCS = 1;
   622  01B5  140F               	bsf	15,0	;volatile
   623  01B6                     l786:
   624                           
   625                           ;main8.c: 102:     ADCON1bits.ADFM = 0;
   626  01B6  139F               	bcf	31,7	;volatile
   627  01B7                     l788:
   628                           
   629                           ;main8.c: 103:     ADCON1bits.VCFG0 = 0;
   630  01B7  121F               	bcf	31,4	;volatile
   631  01B8                     l790:
   632                           
   633                           ;main8.c: 104:     ADCON1bits.VCFG1 = 0;
   634  01B8  129F               	bcf	31,5	;volatile
   635  01B9                     l792:
   636                           
   637                           ;main8.c: 106:     ADCON0bits.ADCS = 0b01;
   638  01B9  1283               	bcf	3,5	;RP0=0, select bank0
   639  01BA  1303               	bcf	3,6	;RP1=0, select bank0
   640  01BB  081F               	movf	31,w	;volatile
   641  01BC  393F               	andlw	-193
   642  01BD  3840               	iorlw	64
   643  01BE  009F               	movwf	31	;volatile
   644  01BF                     l794:
   645                           
   646                           ;main8.c: 107:     ADCON0bits.CHS = 5;
   647  01BF  081F               	movf	31,w	;volatile
   648  01C0  39C3               	andlw	-61
   649  01C1  3814               	iorlw	20
   650  01C2  009F               	movwf	31	;volatile
   651  01C3                     l796:
   652                           
   653                           ;main8.c: 108:     ADCON0bits.ADON = 1;
   654  01C3  141F               	bsf	31,0	;volatile
   655  01C4                     l798:
   656                           
   657                           ;main8.c: 109:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   658  01C4  3010               	movlw	16
   659  01C5  00F4               	movwf	??_setup
   660  01C6                     u757:
   661  01C6  0BF4               	decfsz	??_setup,f
   662  01C7  29C6               	goto	u757
   663  01C8  0000               	nop
   664  01C9                     l800:
   665                           
   666                           ;main8.c: 112:     OPTION_REGbits.T0CS = 0;
   667  01C9  1683               	bsf	3,5	;RP0=1, select bank1
   668  01CA  1303               	bcf	3,6	;RP1=0, select bank1
   669  01CB  1281               	bcf	1,5	;volatile
   670  01CC                     l802:
   671                           
   672                           ;main8.c: 113:     OPTION_REGbits.PSA = 0;
   673  01CC  1181               	bcf	1,3	;volatile
   674  01CD                     l804:
   675                           
   676                           ;main8.c: 114:     OPTION_REGbits.PS2 = 1;
   677  01CD  1501               	bsf	1,2	;volatile
   678  01CE                     l806:
   679                           
   680                           ;main8.c: 115:     OPTION_REGbits.PS1 = 1;
   681  01CE  1481               	bsf	1,1	;volatile
   682  01CF                     l808:
   683                           
   684                           ;main8.c: 116:     OPTION_REGbits.PS0 = 1;
   685  01CF  1401               	bsf	1,0	;volatile
   686  01D0                     l810:
   687                           
   688                           ;main8.c: 119:     PIR1bits.ADIF = 0;
   689  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   690  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   691  01D2  130C               	bcf	12,6	;volatile
   692  01D3                     l812:
   693                           
   694                           ;main8.c: 120:     PIE1bits.ADIE = 1;
   695  01D3  1683               	bsf	3,5	;RP0=1, select bank1
   696  01D4  1303               	bcf	3,6	;RP1=0, select bank1
   697  01D5  170C               	bsf	12,6	;volatile
   698  01D6                     l814:
   699                           
   700                           ;main8.c: 121:     INTCONbits.PEIE = 1;
   701  01D6  170B               	bsf	11,6	;volatile
   702  01D7                     l816:
   703                           
   704                           ;main8.c: 122:     INTCONbits.GIE = 1;
   705  01D7  178B               	bsf	11,7	;volatile
   706  01D8                     l818:
   707                           
   708                           ;main8.c: 123:     INTCONbits.T0IE = 1;
   709  01D8  168B               	bsf	11,5	;volatile
   710  01D9                     l820:
   711                           
   712                           ;main8.c: 124:     INTCONbits.T0IF = 0;
   713  01D9  110B               	bcf	11,2	;volatile
   714  01DA                     l87:
   715  01DA  0008               	return
   716  01DB                     __end_of_setup:
   717                           
   718                           	psect	text2
   719  0093                     __ptext2:	
   720 ;; *************** function _division *****************
   721 ;; Defined at:
   722 ;;		line 128 in file "main8.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      unsigned char 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, pclath, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       3       0       0       0
   739 ;;      Totals:         0       3       0       0       0
   740 ;;Total ram usage:        3 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    2
   743 ;; This function calls:
   744 ;;		___awdiv
   745 ;;		___awmod
   746 ;; This function is called by:
   747 ;;		_main
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           
   752                           ;psect for function _division
   753  0093                     _division:
   754  0093                     l1104:	
   755                           ;incstack = 0
   756                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   757                           
   758                           
   759                           ;main8.c: 129:     centena = valor/100;
   760  0093  3064               	movlw	100
   761  0094  1283               	bcf	3,5	;RP0=0, select bank0
   762  0095  1303               	bcf	3,6	;RP1=0, select bank0
   763  0096  00A0               	movwf	___awdiv@divisor
   764  0097  3000               	movlw	0
   765  0098  00A1               	movwf	___awdiv@divisor+1
   766  0099  0879               	movf	_valor,w
   767  009A  00A8               	movwf	??_division
   768  009B  01A9               	clrf	??_division+1
   769  009C  0828               	movf	??_division,w
   770  009D  00A2               	movwf	___awdiv@dividend
   771  009E  0829               	movf	??_division+1,w
   772  009F  00A3               	movwf	___awdiv@dividend+1
   773  00A0  120A  118A  202A  120A  118A  	fcall	___awdiv
   774  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   775  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   776  00A7  0820               	movf	?___awdiv,w
   777  00A8  00AA               	movwf	??_division+2
   778  00A9  082A               	movf	??_division+2,w
   779  00AA  00F8               	movwf	_centena
   780                           
   781                           ;main8.c: 130:     unidad = valor%100;
   782  00AB  3064               	movlw	100
   783  00AC  00A0               	movwf	___awmod@divisor
   784  00AD  3000               	movlw	0
   785  00AE  00A1               	movwf	___awmod@divisor+1
   786  00AF  0879               	movf	_valor,w
   787  00B0  00A8               	movwf	??_division
   788  00B1  01A9               	clrf	??_division+1
   789  00B2  0828               	movf	??_division,w
   790  00B3  00A2               	movwf	___awmod@dividend
   791  00B4  0829               	movf	??_division+1,w
   792  00B5  00A3               	movwf	___awmod@dividend+1
   793  00B6  120A  118A  20EE  120A  118A  	fcall	___awmod
   794  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   795  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   796  00BD  0820               	movf	?___awmod,w
   797  00BE  00AA               	movwf	??_division+2
   798  00BF  082A               	movf	??_division+2,w
   799  00C0  00F6               	movwf	_unidad
   800                           
   801                           ;main8.c: 131:     decena = unidad/10;
   802  00C1  300A               	movlw	10
   803  00C2  00A0               	movwf	___awdiv@divisor
   804  00C3  3000               	movlw	0
   805  00C4  00A1               	movwf	___awdiv@divisor+1
   806  00C5  0876               	movf	_unidad,w
   807  00C6  00A8               	movwf	??_division
   808  00C7  01A9               	clrf	??_division+1
   809  00C8  0828               	movf	??_division,w
   810  00C9  00A2               	movwf	___awdiv@dividend
   811  00CA  0829               	movf	??_division+1,w
   812  00CB  00A3               	movwf	___awdiv@dividend+1
   813  00CC  120A  118A  202A  120A  118A  	fcall	___awdiv
   814  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   815  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   816  00D3  0820               	movf	?___awdiv,w
   817  00D4  00AA               	movwf	??_division+2
   818  00D5  082A               	movf	??_division+2,w
   819  00D6  00F7               	movwf	_decena
   820                           
   821                           ;main8.c: 132:     unidad = unidad%10;
   822  00D7  300A               	movlw	10
   823  00D8  00A0               	movwf	___awmod@divisor
   824  00D9  3000               	movlw	0
   825  00DA  00A1               	movwf	___awmod@divisor+1
   826  00DB  0876               	movf	_unidad,w
   827  00DC  00A8               	movwf	??_division
   828  00DD  01A9               	clrf	??_division+1
   829  00DE  0828               	movf	??_division,w
   830  00DF  00A2               	movwf	___awmod@dividend
   831  00E0  0829               	movf	??_division+1,w
   832  00E1  00A3               	movwf	___awmod@dividend+1
   833  00E2  120A  118A  20EE  120A  118A  	fcall	___awmod
   834  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   835  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   836  00E9  0820               	movf	?___awmod,w
   837  00EA  00AA               	movwf	??_division+2
   838  00EB  082A               	movf	??_division+2,w
   839  00EC  00F6               	movwf	_unidad
   840  00ED                     l90:
   841  00ED  0008               	return
   842  00EE                     __end_of_division:
   843                           
   844                           	psect	text3
   845  00EE                     __ptext3:	
   846 ;; *************** function ___awmod *****************
   847 ;; Defined at:
   848 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;  divisor         2    0[BANK0 ] int 
   851 ;;  dividend        2    2[BANK0 ] int 
   852 ;; Auto vars:     Size  Location     Type
   853 ;;  sign            1    5[BANK0 ] unsigned char 
   854 ;;  counter         1    4[BANK0 ] unsigned char 
   855 ;; Return value:  Size  Location     Type
   856 ;;                  2    0[BANK0 ] int 
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       4       0       0       0
   865 ;;      Locals:         0       2       0       0       0
   866 ;;      Temps:          1       0       0       0       0
   867 ;;      Totals:         1       6       0       0       0
   868 ;;Total ram usage:        7 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_division
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           
   879                           ;psect for function ___awmod
   880  00EE                     ___awmod:
   881  00EE                     l1066:	
   882                           ;incstack = 0
   883                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   884                           
   885  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   886  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   887  00F0  01A5               	clrf	___awmod@sign
   888  00F1                     l1068:
   889  00F1  1FA3               	btfss	___awmod@dividend+1,7
   890  00F2  28F4               	goto	u631
   891  00F3  28F5               	goto	u630
   892  00F4                     u631:
   893  00F4  28FC               	goto	l1074
   894  00F5                     u630:
   895  00F5                     l1070:
   896  00F5  09A2               	comf	___awmod@dividend,f
   897  00F6  09A3               	comf	___awmod@dividend+1,f
   898  00F7  0AA2               	incf	___awmod@dividend,f
   899  00F8  1903               	skipnz
   900  00F9  0AA3               	incf	___awmod@dividend+1,f
   901  00FA                     l1072:
   902  00FA  01A5               	clrf	___awmod@sign
   903  00FB  0AA5               	incf	___awmod@sign,f
   904  00FC                     l1074:
   905  00FC  1FA1               	btfss	___awmod@divisor+1,7
   906  00FD  28FF               	goto	u641
   907  00FE  2900               	goto	u640
   908  00FF                     u641:
   909  00FF  2905               	goto	l1078
   910  0100                     u640:
   911  0100                     l1076:
   912  0100  09A0               	comf	___awmod@divisor,f
   913  0101  09A1               	comf	___awmod@divisor+1,f
   914  0102  0AA0               	incf	___awmod@divisor,f
   915  0103  1903               	skipnz
   916  0104  0AA1               	incf	___awmod@divisor+1,f
   917  0105                     l1078:
   918  0105  0820               	movf	___awmod@divisor,w
   919  0106  0421               	iorwf	___awmod@divisor+1,w
   920  0107  1903               	btfsc	3,2
   921  0108  290A               	goto	u651
   922  0109  290B               	goto	u650
   923  010A                     u651:
   924  010A  293A               	goto	l1096
   925  010B                     u650:
   926  010B                     l1080:
   927  010B  01A4               	clrf	___awmod@counter
   928  010C  0AA4               	incf	___awmod@counter,f
   929  010D  2919               	goto	l1086
   930  010E                     l1082:
   931  010E  3001               	movlw	1
   932  010F                     u665:
   933  010F  1003               	clrc
   934  0110  0DA0               	rlf	___awmod@divisor,f
   935  0111  0DA1               	rlf	___awmod@divisor+1,f
   936  0112  3EFF               	addlw	-1
   937  0113  1D03               	skipz
   938  0114  290F               	goto	u665
   939  0115                     l1084:
   940  0115  3001               	movlw	1
   941  0116  00F4               	movwf	??___awmod
   942  0117  0874               	movf	??___awmod,w
   943  0118  07A4               	addwf	___awmod@counter,f
   944  0119                     l1086:
   945  0119  1FA1               	btfss	___awmod@divisor+1,7
   946  011A  291C               	goto	u671
   947  011B  291D               	goto	u670
   948  011C                     u671:
   949  011C  290E               	goto	l1082
   950  011D                     u670:
   951  011D                     l1088:
   952  011D  0821               	movf	___awmod@divisor+1,w
   953  011E  0223               	subwf	___awmod@dividend+1,w
   954  011F  1D03               	skipz
   955  0120  2923               	goto	u685
   956  0121  0820               	movf	___awmod@divisor,w
   957  0122  0222               	subwf	___awmod@dividend,w
   958  0123                     u685:
   959  0123  1C03               	skipc
   960  0124  2926               	goto	u681
   961  0125  2927               	goto	u680
   962  0126                     u681:
   963  0126  292D               	goto	l1092
   964  0127                     u680:
   965  0127                     l1090:
   966  0127  0820               	movf	___awmod@divisor,w
   967  0128  02A2               	subwf	___awmod@dividend,f
   968  0129  0821               	movf	___awmod@divisor+1,w
   969  012A  1C03               	skipc
   970  012B  03A3               	decf	___awmod@dividend+1,f
   971  012C  02A3               	subwf	___awmod@dividend+1,f
   972  012D                     l1092:
   973  012D  3001               	movlw	1
   974  012E                     u695:
   975  012E  1003               	clrc
   976  012F  0CA1               	rrf	___awmod@divisor+1,f
   977  0130  0CA0               	rrf	___awmod@divisor,f
   978  0131  3EFF               	addlw	-1
   979  0132  1D03               	skipz
   980  0133  292E               	goto	u695
   981  0134                     l1094:
   982  0134  3001               	movlw	1
   983  0135  02A4               	subwf	___awmod@counter,f
   984  0136  1D03               	btfss	3,2
   985  0137  2939               	goto	u701
   986  0138  293A               	goto	u700
   987  0139                     u701:
   988  0139  291D               	goto	l1088
   989  013A                     u700:
   990  013A                     l1096:
   991  013A  0825               	movf	___awmod@sign,w
   992  013B  1903               	btfsc	3,2
   993  013C  293E               	goto	u711
   994  013D  293F               	goto	u710
   995  013E                     u711:
   996  013E  2944               	goto	l1100
   997  013F                     u710:
   998  013F                     l1098:
   999  013F  09A2               	comf	___awmod@dividend,f
  1000  0140  09A3               	comf	___awmod@dividend+1,f
  1001  0141  0AA2               	incf	___awmod@dividend,f
  1002  0142  1903               	skipnz
  1003  0143  0AA3               	incf	___awmod@dividend+1,f
  1004  0144                     l1100:
  1005  0144  0823               	movf	___awmod@dividend+1,w
  1006  0145  00A1               	movwf	?___awmod+1
  1007  0146  0822               	movf	___awmod@dividend,w
  1008  0147  00A0               	movwf	?___awmod
  1009  0148                     l342:
  1010  0148  0008               	return
  1011  0149                     __end_of___awmod:
  1012                           
  1013                           	psect	text4
  1014  002A                     __ptext4:	
  1015 ;; *************** function ___awdiv *****************
  1016 ;; Defined at:
  1017 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  divisor         2    0[BANK0 ] int 
  1020 ;;  dividend        2    2[BANK0 ] int 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  quotient        2    6[BANK0 ] int 
  1023 ;;  sign            1    5[BANK0 ] unsigned char 
  1024 ;;  counter         1    4[BANK0 ] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  2    0[BANK0 ] int 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       4       0       0       0
  1035 ;;      Locals:         0       4       0       0       0
  1036 ;;      Temps:          1       0       0       0       0
  1037 ;;      Totals:         1       8       0       0       0
  1038 ;;Total ram usage:        9 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    1
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_division
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           
  1049                           ;psect for function ___awdiv
  1050  002A                     ___awdiv:
  1051  002A                     l1022:	
  1052                           ;incstack = 0
  1053                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1054                           
  1055  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1056  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1057  002C  01A5               	clrf	___awdiv@sign
  1058  002D                     l1024:
  1059  002D  1FA1               	btfss	___awdiv@divisor+1,7
  1060  002E  2830               	goto	u531
  1061  002F  2831               	goto	u530
  1062  0030                     u531:
  1063  0030  2838               	goto	l1030
  1064  0031                     u530:
  1065  0031                     l1026:
  1066  0031  09A0               	comf	___awdiv@divisor,f
  1067  0032  09A1               	comf	___awdiv@divisor+1,f
  1068  0033  0AA0               	incf	___awdiv@divisor,f
  1069  0034  1903               	skipnz
  1070  0035  0AA1               	incf	___awdiv@divisor+1,f
  1071  0036                     l1028:
  1072  0036  01A5               	clrf	___awdiv@sign
  1073  0037  0AA5               	incf	___awdiv@sign,f
  1074  0038                     l1030:
  1075  0038  1FA3               	btfss	___awdiv@dividend+1,7
  1076  0039  283B               	goto	u541
  1077  003A  283C               	goto	u540
  1078  003B                     u541:
  1079  003B  2845               	goto	l1036
  1080  003C                     u540:
  1081  003C                     l1032:
  1082  003C  09A2               	comf	___awdiv@dividend,f
  1083  003D  09A3               	comf	___awdiv@dividend+1,f
  1084  003E  0AA2               	incf	___awdiv@dividend,f
  1085  003F  1903               	skipnz
  1086  0040  0AA3               	incf	___awdiv@dividend+1,f
  1087  0041                     l1034:
  1088  0041  3001               	movlw	1
  1089  0042  00F4               	movwf	??___awdiv
  1090  0043  0874               	movf	??___awdiv,w
  1091  0044  06A5               	xorwf	___awdiv@sign,f
  1092  0045                     l1036:
  1093  0045  01A6               	clrf	___awdiv@quotient
  1094  0046  01A7               	clrf	___awdiv@quotient+1
  1095  0047                     l1038:
  1096  0047  0820               	movf	___awdiv@divisor,w
  1097  0048  0421               	iorwf	___awdiv@divisor+1,w
  1098  0049  1903               	btfsc	3,2
  1099  004A  284C               	goto	u551
  1100  004B  284D               	goto	u550
  1101  004C                     u551:
  1102  004C  2884               	goto	l1058
  1103  004D                     u550:
  1104  004D                     l1040:
  1105  004D  01A4               	clrf	___awdiv@counter
  1106  004E  0AA4               	incf	___awdiv@counter,f
  1107  004F  285B               	goto	l1046
  1108  0050                     l1042:
  1109  0050  3001               	movlw	1
  1110  0051                     u565:
  1111  0051  1003               	clrc
  1112  0052  0DA0               	rlf	___awdiv@divisor,f
  1113  0053  0DA1               	rlf	___awdiv@divisor+1,f
  1114  0054  3EFF               	addlw	-1
  1115  0055  1D03               	skipz
  1116  0056  2851               	goto	u565
  1117  0057                     l1044:
  1118  0057  3001               	movlw	1
  1119  0058  00F4               	movwf	??___awdiv
  1120  0059  0874               	movf	??___awdiv,w
  1121  005A  07A4               	addwf	___awdiv@counter,f
  1122  005B                     l1046:
  1123  005B  1FA1               	btfss	___awdiv@divisor+1,7
  1124  005C  285E               	goto	u571
  1125  005D  285F               	goto	u570
  1126  005E                     u571:
  1127  005E  2850               	goto	l1042
  1128  005F                     u570:
  1129  005F                     l1048:
  1130  005F  3001               	movlw	1
  1131  0060                     u585:
  1132  0060  1003               	clrc
  1133  0061  0DA6               	rlf	___awdiv@quotient,f
  1134  0062  0DA7               	rlf	___awdiv@quotient+1,f
  1135  0063  3EFF               	addlw	-1
  1136  0064  1D03               	skipz
  1137  0065  2860               	goto	u585
  1138  0066  0821               	movf	___awdiv@divisor+1,w
  1139  0067  0223               	subwf	___awdiv@dividend+1,w
  1140  0068  1D03               	skipz
  1141  0069  286C               	goto	u595
  1142  006A  0820               	movf	___awdiv@divisor,w
  1143  006B  0222               	subwf	___awdiv@dividend,w
  1144  006C                     u595:
  1145  006C  1C03               	skipc
  1146  006D  286F               	goto	u591
  1147  006E  2870               	goto	u590
  1148  006F                     u591:
  1149  006F  2877               	goto	l1054
  1150  0070                     u590:
  1151  0070                     l1050:
  1152  0070  0820               	movf	___awdiv@divisor,w
  1153  0071  02A2               	subwf	___awdiv@dividend,f
  1154  0072  0821               	movf	___awdiv@divisor+1,w
  1155  0073  1C03               	skipc
  1156  0074  03A3               	decf	___awdiv@dividend+1,f
  1157  0075  02A3               	subwf	___awdiv@dividend+1,f
  1158  0076                     l1052:
  1159  0076  1426               	bsf	___awdiv@quotient,0
  1160  0077                     l1054:
  1161  0077  3001               	movlw	1
  1162  0078                     u605:
  1163  0078  1003               	clrc
  1164  0079  0CA1               	rrf	___awdiv@divisor+1,f
  1165  007A  0CA0               	rrf	___awdiv@divisor,f
  1166  007B  3EFF               	addlw	-1
  1167  007C  1D03               	skipz
  1168  007D  2878               	goto	u605
  1169  007E                     l1056:
  1170  007E  3001               	movlw	1
  1171  007F  02A4               	subwf	___awdiv@counter,f
  1172  0080  1D03               	btfss	3,2
  1173  0081  2883               	goto	u611
  1174  0082  2884               	goto	u610
  1175  0083                     u611:
  1176  0083  285F               	goto	l1048
  1177  0084                     u610:
  1178  0084                     l1058:
  1179  0084  0825               	movf	___awdiv@sign,w
  1180  0085  1903               	btfsc	3,2
  1181  0086  2888               	goto	u621
  1182  0087  2889               	goto	u620
  1183  0088                     u621:
  1184  0088  288E               	goto	l1062
  1185  0089                     u620:
  1186  0089                     l1060:
  1187  0089  09A6               	comf	___awdiv@quotient,f
  1188  008A  09A7               	comf	___awdiv@quotient+1,f
  1189  008B  0AA6               	incf	___awdiv@quotient,f
  1190  008C  1903               	skipnz
  1191  008D  0AA7               	incf	___awdiv@quotient+1,f
  1192  008E                     l1062:
  1193  008E  0827               	movf	___awdiv@quotient+1,w
  1194  008F  00A1               	movwf	?___awdiv+1
  1195  0090  0826               	movf	___awdiv@quotient,w
  1196  0091  00A0               	movwf	?___awdiv
  1197  0092                     l329:
  1198  0092  0008               	return
  1199  0093                     __end_of___awdiv:
  1200                           
  1201                           	psect	text5
  1202  0149                     __ptext5:	
  1203 ;; *************** function _isr *****************
  1204 ;; Defined at:
  1205 ;;		line 35 in file "main8.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1219 ;;      Params:         0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0
  1221 ;;      Temps:          4       0       0       0       0
  1222 ;;      Totals:         4       0       0       0       0
  1223 ;;Total ram usage:        4 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		Interrupt level 1
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _isr
  1234  0149                     _isr:
  1235  0149                     i1l966:
  1236                           
  1237                           ;main8.c: 36:     if (T0IF == 1) {
  1238  0149  1D0B               	btfss	11,2	;volatile
  1239  014A  294C               	goto	u46_21
  1240  014B  294D               	goto	u46_20
  1241  014C                     u46_21:
  1242  014C  2994               	goto	i1l73
  1243  014D                     u46_20:
  1244  014D                     i1l968:
  1245                           
  1246                           ;main8.c: 37:         PORTAbits.RA2 = 0;
  1247  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1248  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1249  014F  1105               	bcf	5,2	;volatile
  1250                           
  1251                           ;main8.c: 38:         PORTAbits.RA0 = 1;
  1252  0150  1405               	bsf	5,0	;volatile
  1253  0151                     i1l970:
  1254                           
  1255                           ;main8.c: 39:         PORTC = (display[centena]);
  1256  0151  0878               	movf	_centena,w
  1257  0152  3E2B               	addlw	(low (_display| 0))& (0+255)
  1258  0153  0084               	movwf	4
  1259  0154  1383               	bcf	3,7	;select IRP bank0
  1260  0155  0800               	movf	0,w
  1261  0156  0087               	movwf	7	;volatile
  1262  0157                     i1l972:
  1263                           
  1264                           ;main8.c: 40:         multi = 0b00000001;
  1265  0157  3001               	movlw	1
  1266  0158  00B5               	movwf	_multi
  1267  0159  3000               	movlw	0
  1268  015A  00B6               	movwf	_multi+1
  1269  015B                     i1l974:
  1270                           
  1271                           ;main8.c: 42:         if (multi == 0b00000001) {
  1272  015B  0335               	decf	_multi,w
  1273  015C  0436               	iorwf	_multi+1,w
  1274  015D  1D03               	btfss	3,2
  1275  015E  2960               	goto	u47_21
  1276  015F  2961               	goto	u47_20
  1277  0160                     u47_21:
  1278  0160  296C               	goto	i1l982
  1279  0161                     u47_20:
  1280  0161                     i1l976:
  1281                           
  1282                           ;main8.c: 43:             PORTAbits.RA0 = 0;
  1283  0161  1005               	bcf	5,0	;volatile
  1284                           
  1285                           ;main8.c: 44:             PORTAbits.RA1 = 1;
  1286  0162  1485               	bsf	5,1	;volatile
  1287  0163                     i1l978:
  1288                           
  1289                           ;main8.c: 45:             PORTC = (display[decena]);
  1290  0163  0877               	movf	_decena,w
  1291  0164  3E2B               	addlw	(low (_display| 0))& (0+255)
  1292  0165  0084               	movwf	4
  1293  0166  0800               	movf	0,w
  1294  0167  0087               	movwf	7	;volatile
  1295  0168                     i1l980:
  1296                           
  1297                           ;main8.c: 46:             multi = 0b00000010;
  1298  0168  3002               	movlw	2
  1299  0169  00B5               	movwf	_multi
  1300  016A  3000               	movlw	0
  1301  016B  00B6               	movwf	_multi+1
  1302  016C                     i1l982:
  1303                           
  1304                           ;main8.c: 48:         if (multi == 0b00000010) {
  1305  016C  3002               	movlw	2
  1306  016D  0635               	xorwf	_multi,w
  1307  016E  0436               	iorwf	_multi+1,w
  1308  016F  1D03               	btfss	3,2
  1309  0170  2972               	goto	u48_21
  1310  0171  2973               	goto	u48_20
  1311  0172                     u48_21:
  1312  0172  297C               	goto	i1l990
  1313  0173                     u48_20:
  1314  0173                     i1l984:
  1315                           
  1316                           ;main8.c: 49:             PORTAbits.RA1 = 0;
  1317  0173  1085               	bcf	5,1	;volatile
  1318                           
  1319                           ;main8.c: 50:             PORTAbits.RA2 = 1;
  1320  0174  1505               	bsf	5,2	;volatile
  1321  0175                     i1l986:
  1322                           
  1323                           ;main8.c: 51:             PORTC = (display[unidad]);
  1324  0175  0876               	movf	_unidad,w
  1325  0176  3E2B               	addlw	(low (_display| 0))& (0+255)
  1326  0177  0084               	movwf	4
  1327  0178  0800               	movf	0,w
  1328  0179  0087               	movwf	7	;volatile
  1329  017A                     i1l988:
  1330                           
  1331                           ;main8.c: 52:             multi = 0x00;
  1332  017A  01B5               	clrf	_multi
  1333  017B  01B6               	clrf	_multi+1
  1334  017C                     i1l990:
  1335                           
  1336                           ;main8.c: 54:         INTCONbits.T0IF = 0;
  1337  017C  110B               	bcf	11,2	;volatile
  1338  017D                     i1l992:
  1339                           
  1340                           ;main8.c: 55:         TMR0 = 255;
  1341  017D  30FF               	movlw	255
  1342  017E  0081               	movwf	1	;volatile
  1343  017F                     i1l994:
  1344                           
  1345                           ;main8.c: 57:     if (PIR1bits.ADIF == 1){
  1346  017F  1F0C               	btfss	12,6	;volatile
  1347  0180  2982               	goto	u49_21
  1348  0181  2983               	goto	u49_20
  1349  0182                     u49_21:
  1350  0182  2994               	goto	i1l73
  1351  0183                     u49_20:
  1352  0183                     i1l996:
  1353                           
  1354                           ;main8.c: 58:         if (ADCON0bits.CHS == 5)
  1355  0183  0C1F               	rrf	31,w	;volatile
  1356  0184  00F0               	movwf	??_isr
  1357  0185  0C70               	rrf	??_isr,w
  1358  0186  390F               	andlw	15
  1359  0187  3A05               	xorlw	5
  1360  0188  1D03               	skipz
  1361  0189  298B               	goto	u50_21
  1362  018A  298C               	goto	u50_20
  1363  018B                     u50_21:
  1364  018B  298F               	goto	i1l1000
  1365  018C                     u50_20:
  1366  018C                     i1l998:
  1367                           
  1368                           ;main8.c: 59:             PORTD = ADRESH;
  1369  018C  081E               	movf	30,w	;volatile
  1370  018D  0088               	movwf	8	;volatile
  1371  018E  2993               	goto	i1l1002
  1372  018F                     i1l1000:
  1373                           
  1374                           ;main8.c: 61:             valor = ADRESH;
  1375  018F  081E               	movf	30,w	;volatile
  1376  0190  00F0               	movwf	??_isr
  1377  0191  0870               	movf	??_isr,w
  1378  0192  00F9               	movwf	_valor
  1379  0193                     i1l1002:
  1380                           
  1381                           ;main8.c: 62:         PIR1bits.ADIF = 0;
  1382  0193  130C               	bcf	12,6	;volatile
  1383  0194                     i1l73:
  1384  0194  0873               	movf	??_isr+3,w
  1385  0195  008A               	movwf	10
  1386  0196  0872               	movf	??_isr+2,w
  1387  0197  0084               	movwf	4
  1388  0198  0E71               	swapf	??_isr+1,w
  1389  0199  0083               	movwf	3
  1390  019A  0EFE               	swapf	btemp,f
  1391  019B  0E7E               	swapf	btemp,w
  1392  019C  0009               	retfie
  1393  019D                     __end_of_isr:
  1394  007E                     btemp	set	126	;btemp
  1395  007E                     wtemp0	set	126
  1396                           
  1397                           	psect	intentry
  1398  0004                     __pintentry:	
  1399                           ;incstack = 0
  1400                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1401                           
  1402  0004                     interrupt_function:
  1403  007E                     saved_w	set	btemp
  1404  0004  00FE               	movwf	btemp
  1405  0005  0E03               	swapf	3,w
  1406  0006  00F1               	movwf	??_isr+1
  1407  0007  0804               	movf	4,w
  1408  0008  00F2               	movwf	??_isr+2
  1409  0009  080A               	movf	10,w
  1410  000A  00F3               	movwf	??_isr+3
  1411  000B  120A  118A  2949   	ljmp	_isr
  1412                           
  1413                           	psect	config
  1414                           
  1415                           ;Config register CONFIG1 @ 0x2007
  1416                           ;	Oscillator Selection bits
  1417                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1418                           ;	Watchdog Timer Enable bit
  1419                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1420                           ;	Power-up Timer Enable bit
  1421                           ;	PWRTE = OFF, PWRT disabled
  1422                           ;	RE3/MCLR pin function select bit
  1423                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1424                           ;	Code Protection bit
  1425                           ;	CP = OFF, Program memory code protection is disabled
  1426                           ;	Data Code Protection bit
  1427                           ;	CPD = OFF, Data memory code protection is disabled
  1428                           ;	Brown Out Reset Selection bits
  1429                           ;	BOREN = OFF, BOR disabled
  1430                           ;	Internal External Switchover bit
  1431                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1432                           ;	Fail-Safe Clock Monitor Enabled bit
  1433                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1434                           ;	Low Voltage Programming Enable bit
  1435                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1436                           ;	In-Circuit Debugger Mode bit
  1437                           ;	DEBUG = 0x1, unprogrammed default
  1438  2007                     	org	8199
  1439  2007  20D4               	dw	8404
  1440                           
  1441                           ;Config register CONFIG2 @ 0x2008
  1442                           ;	Brown-out Reset Selection bit
  1443                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1444                           ;	Flash Program Memory Self Write Enable bits
  1445                           ;	WRT = OFF, Write protection off
  1446  2008                     	org	8200
  1447  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setup
    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Oct 05 20:07:52 2021

                      pc 0002                       l90 00ED                       l87 01DA  
           ___awdiv@sign 0025                       fsr 0004                      l342 0148  
                    l329 0092                      l800 01C9                      l810 01D0  
                    l802 01CC                      l820 01D9                      l812 01D3  
                    l804 01CD                      l814 01D6                      l806 01CE  
                    l816 01D7                      l808 01CF                      l818 01D8  
                    l770 01A5                      l780 01AE                      l772 01A6  
                    l764 019D                      l790 01B8                      l782 01AF  
                    l774 01A9                      l766 01A1                      l792 01B9  
                    l784 01B5                      l776 01AC                      l768 01A2  
                    l794 01BF                      l786 01B6                      l778 01AD  
                    l796 01C3                      l788 01B7                      l798 01C4  
                    u610 0084                      u530 0031                      u611 0083  
                    u531 0030                      u620 0089                      u540 003C  
                    u700 013A                      u621 0088                      u605 0078  
                    u541 003B                      u701 0139                      u550 004D  
                    u710 013F                      u630 00F5                      u551 004C  
                    u711 013E                      u631 00F4                      u640 0100  
                    u720 01E9                      u641 00FF                      u721 01E8  
                    u570 005F                      u650 010B                      u730 01F2  
                    u571 005E                      u651 010A                      u731 01F1  
                    u565 0051                      u590 0070                      u670 011D  
                    u591 006F                      u671 011C                      u680 0127  
                    u585 0060                      u681 0126                      u665 010F  
                    u595 006C                      u747 01FD                      u685 0123  
                    u757 01C6                      u695 012E                      _isr 0149  
                    fsr0 0004                      indf 0000             ___awmod@sign 0025  
                   l1100 0144                     l1030 0038                     l1022 002A  
                   l1110 01E3                     l1040 004D                     l1032 003C  
                   l1024 002D                     l1104 0093                     l1120 01FF  
                   l1112 01E9                     l1050 0070                     l1042 0050  
                   l1034 0041                     l1026 0031                     l1114 01F2  
                   l1122 0202                     l1106 01DB                     l1060 0089  
                   l1052 0076                     l1044 0057                     l1036 0045  
                   l1028 0036                     l1116 01F7                     l1108 01E0  
                   l1062 008E                     l1054 0077                     l1046 005B  
                   l1038 0047                     l1070 00F5                     l1118 01FB  
                   l1056 007E                     l1048 005F                     l1080 010B  
                   l1072 00FA                     l1058 0084                     l1090 0127  
                   l1082 010E                     l1074 00FC                     l1066 00EE  
                   l1092 012D                     l1084 0115                     l1076 0100  
                   l1068 00F1                     l1094 0134                     l1086 0119  
                   l1078 0105                     l1088 011D                     l1096 013A  
                   l1098 013F                     ?_isr 0070                     _T0IF 005A  
                   i1l73 0194                     _TMR0 0001                     _main 01DB  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0093          __end_of___awmod 0149  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l970 0151  
                  i1l980 0168                    i1l972 0157                    i1l990 017C  
                  i1l982 016C                    i1l974 015B                    i1l966 0149  
                  i1l992 017D                    i1l984 0173                    i1l976 0161  
                  i1l968 014D                    i1l994 017F                    i1l986 0175  
                  i1l978 0163                    i1l996 0183                    i1l988 017A  
                  i1l998 018C          ___awdiv@counter 0024                    u50_20 018C  
                  u50_21 018B                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u46_20 014D  
                  u46_21 014C                    u47_20 0161                    u47_21 0160  
                  u48_20 0173                    u48_21 0172                    u49_20 0183  
                  u49_21 0182                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _valor 0079  
                  _multi 0035                    _setup 019D                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 020B                   ??_main 0075                   _ADRESH 001E  
       ___awdiv@dividend 0022                   ?_setup 0070                   _ANSELH 0189  
                 i1l1000 018F                   i1l1002 0193         __end_of_division 00EE  
                 _cambio 0037                ??___awdiv 0074                   _decena 0077  
              ??___awmod 0074         ___awdiv@quotient 0026          ___awmod@divisor 0020  
        ___awmod@counter 0024                   _unidad 0076                   saved_w 007E  
__end_of__initialization 0026           __pcstackCOMMON 0070             __pidataBANK0 021E  
          __end_of_setup 01DB           _OPTION_REGbits 0081                  ??_setup 0074  
             __pbssBANK0 0035               __pmaintext 01DB               __pintentry 0004  
              ?_division 0070                  ___awdiv 002A                  ___awmod 00EE  
                _centena 0078                  __ptext1 019D                  __ptext2 0093  
                __ptext3 00EE                  __ptext4 002A                  __ptext5 0149  
                _display 002B             __size_of_isr 0054         ___awmod@dividend 0022  
   end_of_initialization 0026               ??_division 0028                _PORTAbits 0005  
    start_initialization 0011              __end_of_isr 019D               init_fetch0 020B  
            __pdataBANK0 002B              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_division 005B                 ?___awdiv 0020  
               ?___awmod 0020           __size_of_setup 003E        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of___awdiv 0069         __size_of___awmod 005B  
               _division 0093            __size_of_main 0030               _INTCONbits 000B  
               init_ram0 020F                 intlevel1 0000               _OSCCONbits 008F  
